# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files # prevents giant files from being committed.
      - id: check-case-conflict # checks for files that would conflict in case-insensitive filesystems.
      - id: check-executables-have-shebangs # ensures that (non-binary) executables have a shebang.
      - id: check-json # checks json files for parseable syntax.
      - id: check-shebang-scripts-are-executable # ensures that (non-binary) files with a shebang are executable.
      - id: check-merge-conflict # checks for files that contain merge conflict strings.
      - id: check-symlinks # checks for symlinks which do not point to anything.
      # - id: check-vcs-permalinks # ensures that links to vcs websites are permalinks.
      - id: check-yaml # checks yaml files for parseable syntax.
        exclude: .clang-format
      - id: destroyed-symlinks # detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
      - id: detect-private-key # detects the presence of private keys.
      - id: end-of-file-fixer # ensures that a file is either empty, or ends with one newline.
      - id: file-contents-sorter # sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.
      - id: fix-byte-order-marker # removes utf-8 byte order marker.
      - id: mixed-line-ending # replaces or checks mixed line ending.
      - id: requirements-txt-fixer # sorts entries in requirements.txt.
      - id: trailing-whitespace # trims trailing whitespace.

  - repo: https://github.com/sirosen/check-jsonschema
    rev: 0.19.2
    hooks:
      - id: check-github-actions
      - id: check-github-workflows

  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black

  - repo: https://github.com/PyCQA/isort
    rev: 5.11.4
    hooks:
      - id: isort
        args: [--profile=black]

  - repo: https://github.com/PyCQA/pylint
    rev: v2.15.9
    hooks:
      - id: pylint

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v0.991"
    hooks:
      - id: mypy

  - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
    rev: v0.1.0
    hooks:
      - id: dockerfilelint

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.2
    hooks:
      - id: shellcheck

  - repo: local
    hooks:

      - id: cmake-format
        name: cmake-format
        description: cmake-format can format your listfiles nicely so that they don't look like crap.
        entry: cmake-format
        args: [--in-place, --dangle-parens, --max-pargs-hwrap=1]
        language: python
        additional_dependencies: ["cmakelang==0.6.13", "pyyaml==6.0"]
        types: [cmake]

      # use a system-managed git-clang-format binary. the existing clang-format
      # pre-commit hook is only full-file, so it's simpler to do things
      # ourselves:
      # https://github.com/pre-commit/mirrors-clang-format/blob/46516e8f532c8f2d55e801c34a740ebb8036365c/.pre-commit-hooks.yaml
      - id: git-clang-format
        name: git-clang-format
        entry: git-clang-format
        language: system
        types_or: [c++, c]
        args: ["--style=file", "--"]
        # git-clang-format uses a .git/clang-format-index.lock file, so only
        # run a single process at a time
        require_serial: true
